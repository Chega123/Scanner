[
    {
        "col": 1,
        "line": 1,
        "text": "// Ejemplos de declaración de variables\r",
        "token_name": "TOKEN_COMLINE"
    },
    {
        "col": 2,
        "line": 2,
        "text": "x",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 3,
        "line": 2,
        "text": ":",
        "token_name": "TOKEN_:"
    },
    {
        "col": 10,
        "line": 2,
        "text": "integer",
        "token_name": "TOKEN_INTEGER"
    },
    {
        "col": 11,
        "line": 2,
        "text": ";",
        "token_name": "TOKEN_;"
    },
    {
        "col": 11,
        "line": 2,
        "text": "// x es un entero\r",
        "token_name": "TOKEN_COMLINE"
    },
    {
        "col": 2,
        "line": 3,
        "text": "y",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 3,
        "line": 3,
        "text": ":",
        "token_name": "TOKEN_:"
    },
    {
        "col": 10,
        "line": 3,
        "text": "integer",
        "token_name": "TOKEN_INTEGER"
    },
    {
        "col": 11,
        "line": 3,
        "text": "=",
        "token_name": "TOKEN_="
    },
    {
        "col": 12,
        "line": 3,
        "text": "-",
        "token_name": "TOKEN_NEGNUM"
    },
    {
        "col": 15,
        "line": 3,
        "text": "123",
        "token_name": "TOKEN_NUM"
    },
    {
        "col": 16,
        "line": 3,
        "text": ";",
        "token_name": "TOKEN_;"
    },
    {
        "col": 16,
        "line": 3,
        "text": "// y es un entero con un valor negativo\r",
        "token_name": "TOKEN_COMLINE"
    },
    {
        "col": 2,
        "line": 4,
        "text": "b",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 3,
        "line": 4,
        "text": ":",
        "token_name": "TOKEN_:"
    },
    {
        "col": 10,
        "line": 4,
        "text": "boolean",
        "token_name": "TOKEN_BOOLEAN"
    },
    {
        "col": 11,
        "line": 4,
        "text": "=",
        "token_name": "TOKEN_="
    },
    {
        "col": 16,
        "line": 4,
        "text": "false",
        "token_name": "TOKEN_FALSE"
    },
    {
        "col": 17,
        "line": 4,
        "text": ";",
        "token_name": "TOKEN_;"
    },
    {
        "col": 17,
        "line": 4,
        "text": "// b es un booleano\r",
        "token_name": "TOKEN_COMLINE"
    },
    {
        "col": 2,
        "line": 5,
        "text": "c",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 3,
        "line": 5,
        "text": ":",
        "token_name": "TOKEN_:"
    },
    {
        "col": 7,
        "line": 5,
        "text": "char",
        "token_name": "TOKEN_CHAR"
    },
    {
        "col": 8,
        "line": 5,
        "text": "=",
        "token_name": "TOKEN_="
    },
    {
        "col": 9,
        "line": 5,
        "text": "'",
        "token_name": "TOKEN_COMILLA"
    },
    {
        "col": 10,
        "line": 5,
        "text": "q",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 11,
        "line": 5,
        "text": "'",
        "token_name": "TOKEN_COMILLA"
    },
    {
        "col": 12,
        "line": 5,
        "text": ";",
        "token_name": "TOKEN_;"
    },
    {
        "col": 12,
        "line": 5,
        "text": "// c es un carácter\r",
        "token_name": "TOKEN_COMLINE"
    },
    {
        "col": 2,
        "line": 6,
        "text": "s",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 3,
        "line": 6,
        "text": ":",
        "token_name": "TOKEN_:"
    },
    {
        "col": 9,
        "line": 6,
        "text": "string",
        "token_name": "TOKEN_STRING"
    },
    {
        "col": 10,
        "line": 6,
        "text": "=",
        "token_name": "TOKEN_="
    },
    {
        "col": 25,
        "line": 6,
        "text": "hello bminor\\n",
        "token_name": "TOKEN_TEXT_STRING"
    },
    {
        "col": 27,
        "line": 6,
        "text": ";",
        "token_name": "TOKEN_;"
    },
    {
        "col": 27,
        "line": 6,
        "text": "// s es una cadena con un carácter de nueva línea escapado\r",
        "token_name": "TOKEN_COMLINE"
    },
    {
        "col": 37,
        "line": 8,
        "text": "/* Comentario\r\n   de varias líneas */",
        "token_name": "TOKEN_COMBLOCK"
    },
    {
        "col": 2,
        "line": 9,
        "text": "a",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 3,
        "line": 9,
        "text": ":",
        "token_name": "TOKEN_:"
    },
    {
        "col": 8,
        "line": 9,
        "text": "array",
        "token_name": "TOKEN_ARRAY"
    },
    {
        "col": 9,
        "line": 9,
        "text": "[",
        "token_name": "TOKEN_["
    },
    {
        "col": 10,
        "line": 9,
        "text": "5",
        "token_name": "TOKEN_NUM"
    },
    {
        "col": 11,
        "line": 9,
        "text": "]",
        "token_name": "TOKEN_]"
    },
    {
        "col": 18,
        "line": 9,
        "text": "integer",
        "token_name": "TOKEN_INTEGER"
    },
    {
        "col": 19,
        "line": 9,
        "text": "=",
        "token_name": "TOKEN_="
    },
    {
        "col": 20,
        "line": 9,
        "text": "{",
        "token_name": "TOKEN_{"
    },
    {
        "col": 21,
        "line": 9,
        "text": "1",
        "token_name": "TOKEN_NUM"
    },
    {
        "col": 22,
        "line": 9,
        "text": ",",
        "token_name": "TOKEN_,"
    },
    {
        "col": 23,
        "line": 9,
        "text": "2",
        "token_name": "TOKEN_NUM"
    },
    {
        "col": 24,
        "line": 9,
        "text": ",",
        "token_name": "TOKEN_,"
    },
    {
        "col": 25,
        "line": 9,
        "text": "3",
        "token_name": "TOKEN_NUM"
    },
    {
        "col": 26,
        "line": 9,
        "text": ",",
        "token_name": "TOKEN_,"
    },
    {
        "col": 27,
        "line": 9,
        "text": "4",
        "token_name": "TOKEN_NUM"
    },
    {
        "col": 28,
        "line": 9,
        "text": ",",
        "token_name": "TOKEN_,"
    },
    {
        "col": 29,
        "line": 9,
        "text": "5",
        "token_name": "TOKEN_NUM"
    },
    {
        "col": 30,
        "line": 9,
        "text": "}",
        "token_name": "TOKEN_}"
    },
    {
        "col": 31,
        "line": 9,
        "text": ";",
        "token_name": "TOKEN_;"
    },
    {
        "col": 31,
        "line": 9,
        "text": "// a es un arreglo de enteros\r",
        "token_name": "TOKEN_COMLINE"
    },
    {
        "col": 7,
        "line": 10,
        "text": "months",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 8,
        "line": 10,
        "text": ":",
        "token_name": "TOKEN_:"
    },
    {
        "col": 13,
        "line": 10,
        "text": "array",
        "token_name": "TOKEN_ARRAY"
    },
    {
        "col": 14,
        "line": 10,
        "text": "[",
        "token_name": "TOKEN_["
    },
    {
        "col": 16,
        "line": 10,
        "text": "12",
        "token_name": "TOKEN_NUM"
    },
    {
        "col": 17,
        "line": 10,
        "text": "]",
        "token_name": "TOKEN_]"
    },
    {
        "col": 23,
        "line": 10,
        "text": "string",
        "token_name": "TOKEN_STRING"
    },
    {
        "col": 24,
        "line": 10,
        "text": "=",
        "token_name": "TOKEN_="
    },
    {
        "col": 25,
        "line": 10,
        "text": "{",
        "token_name": "TOKEN_{"
    },
    {
        "col": 33,
        "line": 10,
        "text": "January",
        "token_name": "TOKEN_TEXT_STRING"
    },
    {
        "col": 35,
        "line": 10,
        "text": ",",
        "token_name": "TOKEN_,"
    },
    {
        "col": 44,
        "line": 10,
        "text": "February",
        "token_name": "TOKEN_TEXT_STRING"
    },
    {
        "col": 46,
        "line": 10,
        "text": ",",
        "token_name": "TOKEN_,"
    },
    {
        "col": 52,
        "line": 10,
        "text": "March",
        "token_name": "TOKEN_TEXT_STRING"
    },
    {
        "col": 54,
        "line": 10,
        "text": "}",
        "token_name": "TOKEN_}"
    },
    {
        "col": 55,
        "line": 10,
        "text": ";",
        "token_name": "TOKEN_;"
    },
    {
        "col": 55,
        "line": 10,
        "text": "// months es un arreglo de cadenas\r",
        "token_name": "TOKEN_COMLINE"
    },
    {
        "col": 1,
        "line": 12,
        "text": "// Ejemplo de un mapa con claves string y valores enteros\r",
        "token_name": "TOKEN_COMLINE"
    },
    {
        "col": 2,
        "line": 13,
        "text": "m",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 3,
        "line": 13,
        "text": ":",
        "token_name": "TOKEN_:"
    },
    {
        "col": 6,
        "line": 13,
        "text": "map",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 12,
        "line": 13,
        "text": "string",
        "token_name": "TOKEN_STRING"
    },
    {
        "col": 19,
        "line": 13,
        "text": "integer",
        "token_name": "TOKEN_INTEGER"
    },
    {
        "col": 20,
        "line": 13,
        "text": "=",
        "token_name": "TOKEN_="
    },
    {
        "col": 21,
        "line": 13,
        "text": "{",
        "token_name": "TOKEN_{"
    },
    {
        "col": 27,
        "line": 13,
        "text": "hello",
        "token_name": "TOKEN_TEXT_STRING"
    },
    {
        "col": 29,
        "line": 13,
        "text": ":",
        "token_name": "TOKEN_:"
    },
    {
        "col": 30,
        "line": 13,
        "text": "5",
        "token_name": "TOKEN_NUM"
    },
    {
        "col": 31,
        "line": 13,
        "text": ",",
        "token_name": "TOKEN_,"
    },
    {
        "col": 39,
        "line": 13,
        "text": "goodbye",
        "token_name": "TOKEN_TEXT_STRING"
    },
    {
        "col": 41,
        "line": 13,
        "text": ":",
        "token_name": "TOKEN_:"
    },
    {
        "col": 43,
        "line": 13,
        "text": "10",
        "token_name": "TOKEN_NUM"
    },
    {
        "col": 44,
        "line": 13,
        "text": "}",
        "token_name": "TOKEN_}"
    },
    {
        "col": 45,
        "line": 13,
        "text": ";",
        "token_name": "TOKEN_;"
    },
    {
        "col": 1,
        "line": 15,
        "text": "// Definición de función con parámetros de arreglo y entero\r",
        "token_name": "TOKEN_COMLINE"
    },
    {
        "col": 11,
        "line": 16,
        "text": "printarray",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 12,
        "line": 16,
        "text": ":",
        "token_name": "TOKEN_:"
    },
    {
        "col": 20,
        "line": 16,
        "text": "function",
        "token_name": "TOKEN_FUNCTION"
    },
    {
        "col": 24,
        "line": 16,
        "text": "void",
        "token_name": "TOKEN_VOID"
    },
    {
        "col": 25,
        "line": 16,
        "text": "(",
        "token_name": "TOKEN_("
    },
    {
        "col": 26,
        "line": 16,
        "text": "a",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 27,
        "line": 16,
        "text": ":",
        "token_name": "TOKEN_:"
    },
    {
        "col": 32,
        "line": 16,
        "text": "array",
        "token_name": "TOKEN_ARRAY"
    },
    {
        "col": 33,
        "line": 16,
        "text": "[",
        "token_name": "TOKEN_["
    },
    {
        "col": 34,
        "line": 16,
        "text": "]",
        "token_name": "TOKEN_]"
    },
    {
        "col": 41,
        "line": 16,
        "text": "integer",
        "token_name": "TOKEN_INTEGER"
    },
    {
        "col": 42,
        "line": 16,
        "text": ",",
        "token_name": "TOKEN_,"
    },
    {
        "col": 46,
        "line": 16,
        "text": "size",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 47,
        "line": 16,
        "text": ":",
        "token_name": "TOKEN_:"
    },
    {
        "col": 54,
        "line": 16,
        "text": "integer",
        "token_name": "TOKEN_INTEGER"
    },
    {
        "col": 55,
        "line": 16,
        "text": ")",
        "token_name": "TOKEN_)"
    },
    {
        "col": 56,
        "line": 16,
        "text": "=",
        "token_name": "TOKEN_="
    },
    {
        "col": 57,
        "line": 16,
        "text": "{",
        "token_name": "TOKEN_{"
    },
    {
        "col": 2,
        "line": 17,
        "text": "i",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 3,
        "line": 17,
        "text": ":",
        "token_name": "TOKEN_:"
    },
    {
        "col": 10,
        "line": 17,
        "text": "integer",
        "token_name": "TOKEN_INTEGER"
    },
    {
        "col": 11,
        "line": 17,
        "text": ";",
        "token_name": "TOKEN_;"
    },
    {
        "col": 4,
        "line": 18,
        "text": "for",
        "token_name": "TOKEN_FOR"
    },
    {
        "col": 5,
        "line": 18,
        "text": "(",
        "token_name": "TOKEN_("
    },
    {
        "col": 6,
        "line": 18,
        "text": "i",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 7,
        "line": 18,
        "text": "=",
        "token_name": "TOKEN_="
    },
    {
        "col": 8,
        "line": 18,
        "text": "0",
        "token_name": "TOKEN_NUM"
    },
    {
        "col": 9,
        "line": 18,
        "text": ";",
        "token_name": "TOKEN_;"
    },
    {
        "col": 10,
        "line": 18,
        "text": "i",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 11,
        "line": 18,
        "text": "<",
        "token_name": "TOKEN_<"
    },
    {
        "col": 15,
        "line": 18,
        "text": "size",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 16,
        "line": 18,
        "text": ";",
        "token_name": "TOKEN_;"
    },
    {
        "col": 17,
        "line": 18,
        "text": "i",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 18,
        "line": 18,
        "text": "+",
        "token_name": "TOKEN_SUM"
    },
    {
        "col": 19,
        "line": 18,
        "text": "+",
        "token_name": "TOKEN_SUM"
    },
    {
        "col": 20,
        "line": 18,
        "text": ")",
        "token_name": "TOKEN_)"
    },
    {
        "col": 21,
        "line": 18,
        "text": "{",
        "token_name": "TOKEN_{"
    },
    {
        "col": 6,
        "line": 19,
        "text": "print",
        "token_name": "TOKEN_PRINT"
    },
    {
        "col": 7,
        "line": 19,
        "text": "a",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 8,
        "line": 19,
        "text": "[",
        "token_name": "TOKEN_["
    },
    {
        "col": 9,
        "line": 19,
        "text": "i",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 10,
        "line": 19,
        "text": "]",
        "token_name": "TOKEN_]"
    },
    {
        "col": 11,
        "line": 19,
        "text": ",",
        "token_name": "TOKEN_,"
    },
    {
        "col": 14,
        "line": 19,
        "text": "\\n",
        "token_name": "TOKEN_TEXT_STRING"
    },
    {
        "col": 16,
        "line": 19,
        "text": ";",
        "token_name": "TOKEN_;"
    },
    {
        "col": 2,
        "line": 20,
        "text": "}",
        "token_name": "TOKEN_}"
    },
    {
        "col": 2,
        "line": 21,
        "text": "}",
        "token_name": "TOKEN_}"
    },
    {
        "col": 29,
        "line": 23,
        "text": "/* Errores y casos límites */",
        "token_name": "TOKEN_COMBLOCK"
    },
    {
        "col": 1,
        "line": 25,
        "text": "// Identificador inválido (no puede empezar con un número)\r",
        "token_name": "TOKEN_COMLINE"
    },
    {
        "col": 2,
        "line": 26,
        "text": "1",
        "token_name": "TOKEN_NUM"
    },
    {
        "col": 10,
        "line": 26,
        "text": "variable",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 11,
        "line": 26,
        "text": ":",
        "token_name": "TOKEN_:"
    },
    {
        "col": 18,
        "line": 26,
        "text": "integer",
        "token_name": "TOKEN_INTEGER"
    },
    {
        "col": 19,
        "line": 26,
        "text": "=",
        "token_name": "TOKEN_="
    },
    {
        "col": 22,
        "line": 26,
        "text": "100",
        "token_name": "TOKEN_NUM"
    },
    {
        "col": 23,
        "line": 26,
        "text": ";",
        "token_name": "TOKEN_;"
    },
    {
        "col": 23,
        "line": 26,
        "text": "// Error: el identificador comienza con un número\r",
        "token_name": "TOKEN_COMLINE"
    },
    {
        "col": 1,
        "line": 28,
        "text": "// Identificador inválido (contiene el carácter ilegal @)\r",
        "token_name": "TOKEN_COMLINE"
    },
    {
        "col": 4,
        "line": 29,
        "text": "var",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 10,
        "line": 29,
        "text": "iable",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 11,
        "line": 29,
        "text": ":",
        "token_name": "TOKEN_:"
    },
    {
        "col": 18,
        "line": 29,
        "text": "integer",
        "token_name": "TOKEN_INTEGER"
    },
    {
        "col": 19,
        "line": 29,
        "text": "=",
        "token_name": "TOKEN_="
    },
    {
        "col": 22,
        "line": 29,
        "text": "200",
        "token_name": "TOKEN_NUM"
    },
    {
        "col": 23,
        "line": 29,
        "text": ";",
        "token_name": "TOKEN_;"
    },
    {
        "col": 23,
        "line": 29,
        "text": "// Error: el identificador contiene '@'\r",
        "token_name": "TOKEN_COMLINE"
    },
    {
        "col": 1,
        "line": 31,
        "text": "// Uso de número flotante no permitido\r",
        "token_name": "TOKEN_COMLINE"
    },
    {
        "col": 9,
        "line": 32,
        "text": "floatNum",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 10,
        "line": 32,
        "text": ":",
        "token_name": "TOKEN_:"
    },
    {
        "col": 17,
        "line": 32,
        "text": "integer",
        "token_name": "TOKEN_INTEGER"
    },
    {
        "col": 18,
        "line": 32,
        "text": "=",
        "token_name": "TOKEN_="
    },
    {
        "col": 20,
        "line": 32,
        "text": "12",
        "token_name": "TOKEN_NUM"
    },
    {
        "col": 23,
        "line": 32,
        "text": "34",
        "token_name": "TOKEN_NUM"
    },
    {
        "col": 24,
        "line": 32,
        "text": ";",
        "token_name": "TOKEN_;"
    },
    {
        "col": 24,
        "line": 32,
        "text": "// Error: los números flotantes no están permitidos\r",
        "token_name": "TOKEN_COMLINE"
    },
    {
        "col": 1,
        "line": 34,
        "text": "// Expresión booleana inválida (uso incorrecto de & o |, debería ser && o ||)\r",
        "token_name": "TOKEN_COMLINE"
    },
    {
        "col": 3,
        "line": 35,
        "text": "if",
        "token_name": "TOKEN_IF"
    },
    {
        "col": 4,
        "line": 35,
        "text": "(",
        "token_name": "TOKEN_("
    },
    {
        "col": 5,
        "line": 35,
        "text": "a",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 7,
        "line": 35,
        "text": "b",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 8,
        "line": 35,
        "text": ")",
        "token_name": "TOKEN_)"
    },
    {
        "col": 9,
        "line": 35,
        "text": "{",
        "token_name": "TOKEN_{"
    },
    {
        "col": 14,
        "line": 35,
        "text": "print",
        "token_name": "TOKEN_PRINT"
    },
    {
        "col": 37,
        "line": 35,
        "text": "Error: uso de & simple",
        "token_name": "TOKEN_TEXT_STRING"
    },
    {
        "col": 39,
        "line": 35,
        "text": ";",
        "token_name": "TOKEN_;"
    },
    {
        "col": 40,
        "line": 35,
        "text": "}",
        "token_name": "TOKEN_}"
    },
    {
        "col": 40,
        "line": 35,
        "text": "// Error: debería ser &&\r",
        "token_name": "TOKEN_COMLINE"
    },
    {
        "col": 3,
        "line": 36,
        "text": "if",
        "token_name": "TOKEN_IF"
    },
    {
        "col": 4,
        "line": 36,
        "text": "(",
        "token_name": "TOKEN_("
    },
    {
        "col": 5,
        "line": 36,
        "text": "a",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 7,
        "line": 36,
        "text": "b",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 8,
        "line": 36,
        "text": ")",
        "token_name": "TOKEN_)"
    },
    {
        "col": 9,
        "line": 36,
        "text": "{",
        "token_name": "TOKEN_{"
    },
    {
        "col": 14,
        "line": 36,
        "text": "print",
        "token_name": "TOKEN_PRINT"
    },
    {
        "col": 37,
        "line": 36,
        "text": "Error: uso de | simple",
        "token_name": "TOKEN_TEXT_STRING"
    },
    {
        "col": 39,
        "line": 36,
        "text": ";",
        "token_name": "TOKEN_;"
    },
    {
        "col": 40,
        "line": 36,
        "text": "}",
        "token_name": "TOKEN_}"
    },
    {
        "col": 40,
        "line": 36,
        "text": "// Error: debería ser ||\r",
        "token_name": "TOKEN_COMLINE"
    },
    {
        "col": 1,
        "line": 38,
        "text": "// Comparación inválida (se usa = en lugar de ==)\r",
        "token_name": "TOKEN_COMLINE"
    },
    {
        "col": 3,
        "line": 39,
        "text": "if",
        "token_name": "TOKEN_IF"
    },
    {
        "col": 4,
        "line": 39,
        "text": "(",
        "token_name": "TOKEN_("
    },
    {
        "col": 5,
        "line": 39,
        "text": "a",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 6,
        "line": 39,
        "text": "=",
        "token_name": "TOKEN_="
    },
    {
        "col": 7,
        "line": 39,
        "text": "b",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 8,
        "line": 39,
        "text": ")",
        "token_name": "TOKEN_)"
    },
    {
        "col": 9,
        "line": 39,
        "text": "{",
        "token_name": "TOKEN_{"
    },
    {
        "col": 14,
        "line": 39,
        "text": "print",
        "token_name": "TOKEN_PRINT"
    },
    {
        "col": 45,
        "line": 39,
        "text": "Error: uso de = en lugar de ==",
        "token_name": "TOKEN_TEXT_STRING"
    },
    {
        "col": 47,
        "line": 39,
        "text": ";",
        "token_name": "TOKEN_;"
    },
    {
        "col": 48,
        "line": 39,
        "text": "}",
        "token_name": "TOKEN_}"
    },
    {
        "col": 48,
        "line": 39,
        "text": "// Error: debería ser ==\r",
        "token_name": "TOKEN_COMLINE"
    },
    {
        "col": 1,
        "line": 41,
        "text": "// Ejemplo de comparación válida\r",
        "token_name": "TOKEN_COMLINE"
    },
    {
        "col": 3,
        "line": 42,
        "text": "if",
        "token_name": "TOKEN_IF"
    },
    {
        "col": 4,
        "line": 42,
        "text": "(",
        "token_name": "TOKEN_("
    },
    {
        "col": 5,
        "line": 42,
        "text": "a",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 6,
        "line": 42,
        "text": "=",
        "token_name": "TOKEN_="
    },
    {
        "col": 7,
        "line": 42,
        "text": "=",
        "token_name": "TOKEN_="
    },
    {
        "col": 8,
        "line": 42,
        "text": "b",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 9,
        "line": 42,
        "text": ")",
        "token_name": "TOKEN_)"
    },
    {
        "col": 10,
        "line": 42,
        "text": "{",
        "token_name": "TOKEN_{"
    },
    {
        "col": 15,
        "line": 42,
        "text": "print",
        "token_name": "TOKEN_PRINT"
    },
    {
        "col": 30,
        "line": 42,
        "text": "a es igual a b",
        "token_name": "TOKEN_TEXT_STRING"
    },
    {
        "col": 32,
        "line": 42,
        "text": ";",
        "token_name": "TOKEN_;"
    },
    {
        "col": 33,
        "line": 42,
        "text": "}",
        "token_name": "TOKEN_}"
    },
    {
        "col": 1,
        "line": 44,
        "text": "// Negación lógica inválida (! sin expresión válida)\r",
        "token_name": "TOKEN_COMLINE"
    },
    {
        "col": 3,
        "line": 45,
        "text": "if",
        "token_name": "TOKEN_IF"
    },
    {
        "col": 4,
        "line": 45,
        "text": "(",
        "token_name": "TOKEN_("
    },
    {
        "col": 5,
        "line": 45,
        "text": "!",
        "token_name": "TOKEN_NEGEXPR"
    },
    {
        "col": 6,
        "line": 45,
        "text": "a",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 7,
        "line": 45,
        "text": ")",
        "token_name": "TOKEN_)"
    },
    {
        "col": 8,
        "line": 45,
        "text": "{",
        "token_name": "TOKEN_{"
    },
    {
        "col": 13,
        "line": 45,
        "text": "print",
        "token_name": "TOKEN_PRINT"
    },
    {
        "col": 34,
        "line": 45,
        "text": "Negacion logica de a",
        "token_name": "TOKEN_TEXT_STRING"
    },
    {
        "col": 36,
        "line": 45,
        "text": ";",
        "token_name": "TOKEN_;"
    },
    {
        "col": 37,
        "line": 45,
        "text": "}",
        "token_name": "TOKEN_}"
    },
    {
        "col": 37,
        "line": 45,
        "text": "// Esto es válido\r",
        "token_name": "TOKEN_COMLINE"
    },
    {
        "col": 3,
        "line": 46,
        "text": "if",
        "token_name": "TOKEN_IF"
    },
    {
        "col": 4,
        "line": 46,
        "text": "(",
        "token_name": "TOKEN_("
    },
    {
        "col": 5,
        "line": 46,
        "text": "!",
        "token_name": "TOKEN_NEGEXPR"
    },
    {
        "col": 6,
        "line": 46,
        "text": "=",
        "token_name": "TOKEN_="
    },
    {
        "col": 7,
        "line": 46,
        "text": "a",
        "token_name": "TOKEN_ID"
    },
    {
        "col": 8,
        "line": 46,
        "text": ")",
        "token_name": "TOKEN_)"
    },
    {
        "col": 9,
        "line": 46,
        "text": "{",
        "token_name": "TOKEN_{"
    },
    {
        "col": 14,
        "line": 46,
        "text": "print",
        "token_name": "TOKEN_PRINT"
    },
    {
        "col": 39,
        "line": 46,
        "text": "Error: negacion invalida",
        "token_name": "TOKEN_TEXT_STRING"
    },
    {
        "col": 41,
        "line": 46,
        "text": ";",
        "token_name": "TOKEN_;"
    },
    {
        "col": 42,
        "line": 46,
        "text": "}",
        "token_name": "TOKEN_}"
    },
    {
        "col": 42,
        "line": 46,
        "text": "// Error: sintaxis de negación inválida\r",
        "token_name": "TOKEN_COMLINE"
    },
    {
        "col": 1,
        "line": 48,
        "text": "// Ejemplo de comentario de bloque con un bloque anidado (debe manejarse correctamente)\r",
        "token_name": "TOKEN_COMLINE"
    },
    {
        "col": 74,
        "line": 49,
        "text": "/* Este es un comentario\r\n Comentario anidado Aún dentro del comentario */",
        "token_name": "TOKEN_COMBLOCK"
    }
]